@use "sass:map";
@use "sass:math";
// src/styles/uswds-application-ui/_settings.scss
// 4-pt spacing scale
$theme-use-rem: true;
$theme-spacing-base-unit: 4px !global; // Set base for spacing-multiple() to 4px
$theme-spacing-scale: (
  "0":    0,
  "1px":  0.0625rem,  // 1px
  "05": 0.5,        // 2px
  "1":    1,          // 4px
  "5px":  0.3125rem,  // 5px (corrected from 0.313rem)
  "105":1.5,        // 6px
  "2":    2,          // 8px
  "205":2.5,        // 10px
  "3":    3,          // 12px
  "305":3.5,        // 14px
  "4":    4,          // 16px
  "405":4.5,        // 18px
  "5":    5,          // 20px
  "505":5.5,        // 22px
  "6":    6,          // 24px
  "605":6.5,        // 26px
  "7":    7,          // 28px
  "705":7.5,        // 30px
  "8":    8,          // 32px
  "9":    9,          // 36px
  "10":   10,         // 40px
  "11":   11,         // 44px
  "12":   12,         // 48px
  "14":   14,         // 56px
  "16":   16,         // 64px
  "18":   18,         // 72px
  "20":   20,         // 80px
  "22":   22,         // 88px
  "24":   24,         // 96px
  "28":   28,         // 112px
  "32":   32,         // 128px
  "36":   36,         // 144px
  "40":   40,         // 160px
  "44":   44,         // 176px
  "48":   48,         // 192px
  "52":   52,         // 208px
  "56":   56,         // 224px
  "60":   60,         // 240px
  "64":   64,         // 256px
  "72":   72,         // 288px
  "80":   80,         // 320px
  "96":   96          // 384px
);

// Use your custom scale as the source for USWDS spacing utility values
$theme-spacing-units: $theme-spacing-scale !global;

// Tell USWDS which keys from $theme-spacing-scale to generate utility classes for
// (e.g., p-1, mt-2, gap-3, etc., using your custom scale values)
$theme-utility-spacing-suffixes: (
  "0",
  "1px",
  "05",
  "1",
  "5px",
  "105",
  "2",
  "205",
  "3",
  "305",
  "4",
  "405",
  "5",
  "505",
  "6",
  "7",
  "8",
  "9",
  "10",
  "11",
  "12",
  "14",
  "16",
  "20",
  "24",
  "28",
  "32",
  "36",
  "40",
  "48",
  "neg-1px", // Ensure negative versions are also available if needed directly
  "neg-05",
  "neg-1",
  "neg-2",
  "neg-3",
  "neg-4"
) !global;

// -----------------------------------------------------------------------------
// Type scale (font-size) and line-height tokens
// Uses spacing-scale tokens for matching values; add raw rems where needed.
// -----------------------------------------------------------------------------
$theme-type-scale: (
  xs:   map.get($theme-spacing-scale, "3"),     // 0.75rem (12px)
  sm:   map.get($theme-spacing-scale, "305"),   // 0.875rem (14px)
  md:   map.get($theme-spacing-scale, "4"),     // 1rem (16px)
  lg:   map.get($theme-spacing-scale, "405"),   // 1.125rem (18px)
  xl:   map.get($theme-spacing-scale, "5"),     // 1.25rem (20px)
  "2xl": map.get($theme-spacing-scale, "6"),    // 1.5rem (24px)
  "3xl": map.get($theme-spacing-scale, "705"),   // 1.875rem (30px)
  "4xl": map.get($theme-spacing-scale, "9"),    // 2.25rem (36px)
  "5xl": map.get($theme-spacing-scale, "12"),   // 3rem (48px)
  "6xl": map.get($theme-spacing-scale, "16"),   // 4rem (64px)
  "7xl": map.get($theme-spacing-scale, "18"),  // 4.5rem (72px)
  "8xl": map.get($theme-spacing-scale, "24"),   // 6rem (96px)
  "9xl": map.get($theme-spacing-scale, "32")    // 8rem (128px)
);

$theme-line-height-scale: (
  xs:    calc(1 / 0.75),   // line-height for text-xs
  sm:    calc(1.25 / 0.875),// line-height for text-sm
  md:  calc(1.5 / 1),    // line-height for text-md
  lg:    calc(1.75 / 1.125),// line-height for text-lg
  xl:    calc(1.75 / 1.25), // line-height for text-xl
  "2xl": calc(2 / 1.5),    // line-height for text-2xl
  "3xl": calc(2.25 / 1.875),// line-height for text-3xl
  "4xl": calc(2.5 / 2.25),  // line-height for text-4xl
  "5xl": 1,                 // line-height for text-5xl
  "6xl": 1,                 // line-height for text-6xl
  "7xl": 1,                 // line-height for text-7xl
  "8xl": 1,                 // line-height for text-8xl
  "9xl": 1,                 // line-height for text-9xl
  none:  1     // line-height-none utility
);

// -----------------------------------------------------------------------------
// Override USWDS color palettes with custom hex scales
// This definition must come BEFORE variables that use it (e.g., $theme-color-base-lightest).
// These definitions will be used by USWDS when it initializes.
// -----------------------------------------------------------------------------
$theme-color-palette: (
  gray: (
    5:  #FAFAFA,
    10: #F5F5F5,
    20: #E9EAEB,
    30: #D5D7DA,
    40: #A4A7AE,
    50: #717680,
    60: #535862,
    70: #414651,
    80: #252B37,
    90: #181D27,
    95: #0A0D12
  ),
  red: (
    5:  #FEF3F2,
    10: #FEE4E2,
    20: #FECDCA,
    30: #FDA29B,
    40: #F97066,
    50: #F04438,
    60: #D92D20,
    70: #B42318,
    80: #912018,
    90: #7A271A,
    95: #55160C
  ),
  indigo: (
    5:  #EEF4FF,
    10: #E0EAFF,
    20: #C7D7FE,
    30: #A4BCFD,
    40: #8098F9,
    50: #6172F3,
    60: #444CE7,
    70: #3538CD,
    80: #2D31A6,
    90: #2D3282,
    95: #1F235B
  ),
  orange: (
    5:  #FFF4ED,
    10: #FFE6D5,
    20: #FFD6AE,
    30: #FF9C66,
    40: #FF692E,
    50: #FF4405,
    60: #E62E05,
    70: #BC1B06,
    80: #97180C,
    90: #771A0D,
    95: #57130A
  ),
  green: (
    5:  #ECFDF3,
    10: #DCFAE6,
    20: #ABEFC6,
    30: #75E0A7,
    40: #47CD89,
    50: #17B26A,
    60: #079455,
    70: #067647,
    80: #085D3A,
    90: #074D31,
    95: #053321
  )
  // Add other custom palettes here if needed, following the same structure.
);

// grayscale brand palette (derived from THE MODIFIED $theme-color-palette above)
$theme-color-base-lightest: map.get(map.get($theme-color-palette, gray), 5);
$theme-color-base-light:   map.get(map.get($theme-color-palette, gray), 10);
$theme-color-base:         map.get(map.get($theme-color-palette, gray), 30);
$theme-color-base-dark:    map.get(map.get($theme-color-palette, gray), 60);
$theme-color-base-darkest: map.get(map.get($theme-color-palette, gray), 80);

// map primary + secondary to grayscale tokens

$theme-color-primary:        $theme-color-base-dark;
$theme-color-primary-darker: $theme-color-base-darkest;
$theme-color-secondary:      $theme-color-base;

// Define which color families to use for background utilities
// This tells USWDS to generate usa-bg-* classes for all shades in these families.
$theme-utility-background-colors: (
  "gray",
  "red",
  "indigo",
  "orange",
  "green"
);

// NOTE: The loop from original lines 101-111 that attempted to add '95' shades
// and the subsequent map-merge for $theme-color-palette (original line 116) have been
// addressed by defining $theme-color-palette directly and fully above.



// Configure USWDS utility generation
// --- Sizing Utilities (Height, Width) ---
$height-settings:
  (output: true);
$height-manual-values: $theme-spacing-scale;

$width-settings:
  (output: true);
$width-manual-values: $theme-spacing-scale;

$max-width-settings:
  (output: true);
$max-width-manual-values: $theme-spacing-scale;

$min-width-settings:
  (output: true);
$min-width-manual-values: $theme-spacing-scale;

$max-height-settings:
  (output: true);
$max-height-manual-values: $theme-spacing-scale;

$min-height-settings:
  (output: true);
$min-height-manual-values: $theme-spacing-scale;

$measure-settings:
  (output: false); // For .measure-* utilities, kept as false per original setting

// --- Spacing Utilities (Margin, Padding) ---
$margin-settings:
  (output: true);
$margin-manual-values: $theme-spacing-scale;

$padding-settings:
  (output: true);
$padding-manual-values: $theme-spacing-scale;

// Grid layout utilities (not to be confused with display: grid)
$theme-utility-grid-gap: false;
$theme-utility-grid-template-columns: false;
$theme-utility-grid-column: false;
$theme-utility-grid-template-rows: false;
$theme-utility-grid-row: false;
$theme-utility-grid-auto-flow: false;
$theme-utility-grid-auto-columns: false;
$theme-utility-grid-auto-rows: false;

// Spacing utilities
$theme-utility-margin: false;  // Disables all margin utilities (.margin-1, .margin-x-1, etc.)
$theme-utility-padding: false; // Disables all padding utilities (.padding-1, .padding-x-1, etc.)

// Display utilities
// Setting this to false disables .d-none, .d-block, .d-flex, .d-grid, etc.
$theme-utility-display: false;
// -----------------------------------------------------------------------------
// Utility value maps for responsive add-utility generation
// -----------------------------------------------------------------------------

$justify-content-map: (
  start:   flex-start,
  end:     flex-end,
  center:  center,
  between: space-between,
  around:  space-around,
  evenly:  space-evenly
);

$align-items-map: (
  start:   flex-start,
  end:     flex-end,
  center:  center,
  baseline: baseline,
  stretch: stretch
);

$align-content-map: (
  start:   flex-start,
  end:     flex-end,
  center:  center,
  between: space-between,
  around:  space-around,
  evenly:  space-evenly
);

$align-self-map: (
  auto:    auto,
  start:   flex-start,
  end:     flex-end,
  center:  center,
  stretch: stretch
);

$flex-direction-map: (
  row:          row,
  row-reverse:  row-reverse,
  column:       column,
  column-reverse: column-reverse
);

$flex-wrap-map: (
  wrap:         wrap,
  wrap-reverse: wrap-reverse,
  nowrap:       nowrap
);

// -----------------------------------------------------------------------------
// Flex shorthand map for responsive flex utilities
// -----------------------------------------------------------------------------
$flex-map: (
  1:       1 1 0%,
  auto:    1 1 auto,
  initial: 0 1 auto,
  none:    none,
  2:       2 1 0%,
  3:       3 1 0%,
  4:       4 1 0%
);

// -----------------------------------------------------------------------------
// Flex grow/shrink maps for responsive generation
// -----------------------------------------------------------------------------
$flex-grow-map: (
  0: 0,
  1: 1
);

$flex-shrink-map: (
  0: 0,
  1: 1
);

// -----------------------------------------------------------------------------
// Place utilities maps for responsive add-utility generation
// -----------------------------------------------------------------------------

$place-content-map: (
  start:   start,
  end:     end,
  center:  center,
  between: space-between,
  around:  space-around,
  evenly:  space-evenly,
  stretch: stretch
);

$place-items-map: (
  start:   start,
  end:     end,
  center:  center,
  stretch: stretch
);

$place-self-map: (
  auto:    auto,
  start:   start,
  end:     end,
  center:  center,
  stretch: stretch
);
$order-map: (
  first: -9999,
  last:   9999,
  none:      0,
  1:         1,
  2:         2,
  3:         3,
  4:         4,
  5:         5,
  6:         6,
  7:         7,
  8:         8,
  9:         9,
  10:       10,
  11:       11,
  12:       12
);

// -----------------------------------------------------------------------------
// Grid utilities maps for responsive generation
// -----------------------------------------------------------------------------
$grid-cols-map: (
  1:  repeat(1, minmax(0, 1fr)),
  2:  repeat(2, minmax(0, 1fr)),
  3:  repeat(3, minmax(0, 1fr)),
  4:  repeat(4, minmax(0, 1fr)),
  5:  repeat(5, minmax(0, 1fr)),
  6:  repeat(6, minmax(0, 1fr)),
  7:  repeat(7, minmax(0, 1fr)),
  8:  repeat(8, minmax(0, 1fr)),
  9:  repeat(9, minmax(0, 1fr)),
  10: repeat(10, minmax(0, 1fr)),
  11: repeat(11, minmax(0, 1fr)),
  12: repeat(12, minmax(0, 1fr))
);

$grid-rows-map: (
  1: repeat(1, minmax(0, 1fr)),
  2: repeat(2, minmax(0, 1fr)),
  3: repeat(3, minmax(0, 1fr)),
  4: repeat(4, minmax(0, 1fr)),
  5: repeat(5, minmax(0, 1fr)),
  6: repeat(6, minmax(0, 1fr))
);

$col-span-map: (
  1: span 1 / span 1,
  2: span 2 / span 2,
  3: span 3 / span 3,
  4: span 4 / span 4,
  5: span 5 / span 5,
  6: span 6 / span 6,
  7: span 7 / span 7,
  8: span 8 / span 8,
  9: span 9 / span 9,
  10: span 10 / span 10,
  11: span 11 / span 11,
  12: span 12 / span 12
);

$row-span-map: (
  1: span 1 / span 1,
  2: span 2 / span 2,
  3: span 3 / span 3,
  4: span 4 / span 4,
  5: span 5 / span 5,
  6: span 6 / span 6
);

$grid-auto-flow-map: (
  row:           row,
  column:        column,
  "row-dense":   row dense,
  "column-dense": column dense
);

$auto-cols-map: (
  auto:  auto,
  min:   min-content,
  max:   max-content,
  fr:    minmax(0, 1fr)
);

$auto-rows-map: (
  auto:  auto,
  min:   min-content,
  max:   max-content,
  fr:    minmax(0, 1fr)
);

// -----------------------------------------------------------------------------
// Display utilities map for responsive generation
// -----------------------------------------------------------------------------
$display-map: (
  inline:               inline,
  block:                block,
  "inline-block":       inline-block,
  "flow-root":          flow-root,
  flex:                 flex,
  "inline-flex":        inline-flex,
  grid:                 grid,
  "inline-grid":        inline-grid,
  contents:             contents,
  table:                table,
  "inline-table":       inline-table,
  "table-caption":      table-caption,
  "table-cell":         table-cell,
  "table-column":       table-column,
  "table-column-group": table-column-group,
  "table-footer-group": table-footer-group,
  "table-header-group": table-header-group,
  "table-row-group":    table-row-group,
  "table-row":          table-row,
  "list-item":          list-item,
  none:                 none
);

// Build a map of negative values from your spacing scale
$margin-negative-map: ();

@each $key, $val in $theme-spacing-scale {
  $margin-negative-map: map.merge(
    $margin-negative-map,
    ("neg-#{$key}": -#{$val})
  );
}

// -----------------------------------------------------------------------------
// Auto-margin map for responsive generation
// -----------------------------------------------------------------------------
$margin-auto-map: (
  auto: auto
);

// -----------------------------------------------------------------------------
// Box-sizing utilities map for responsive generation
// -----------------------------------------------------------------------------
$box-sizing-map: (
  border:  border-box,
  content: content-box
);

// -----------------------------------------------------------------------------
// Object-fit utilities map for responsive generation
// -----------------------------------------------------------------------------
$object-fit-map: (
  contain:     contain,
  cover:       cover,
  fill:        fill,
  none:        none,
  "scale-down": scale-down
);

// -----------------------------------------------------------------------------
// Object-position utilities map for responsive generation
// -----------------------------------------------------------------------------
$object-position-map: (
  "top-left":     top left,
  top:            top,
  "top-right":    top right,
  left:           left,
  center:         center,
  right:          right,
  "bottom-left":  bottom left,
  bottom:         bottom,
  "bottom-right": bottom right
);

// -----------------------------------------------------------------------------
// Aspect-ratio utilities map for responsive generation
// -----------------------------------------------------------------------------
$aspect-ratio-map: (
  auto:   auto,
  square: math.div(1, 1),
  video:  math.div(16, 9)
);

// -----------------------------------------------------------------------------
// Box-decoration-break utilities map for responsive generation
// -----------------------------------------------------------------------------
$box-decoration-break-map: (
  clone: clone,
  slice: slice
);
